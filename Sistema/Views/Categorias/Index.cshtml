@model Paginacion<Sistema.Models.Categoria>

@{
    ViewData["Title"] = "Index";
}

<h2 class="h2">Categoría Cursos</h2>


<p>
    <a asp-action="Create"><button class="btn btn-primary">Nuevo</button></a>
</p>
<form asp-action="Index" method="get">
    <div>
        <p>
            Filtro <input type="text" name="searchString" class="form-control-sm" value="@ViewData["CurrentFilter"]" />

            <input type="submit" value="Buscar" class="btn btn-default" />
        </p>

        <a asp-action="Index">Todos los registros</a> | Registros mostrados @Model.TotalR
    </div>
    </form>
<table class="table">
    <thead>
        <tr>
                <th>
                   <a asp-action="Index" asp-route-sortOrder="@ViewData["NombreSortParm"]" asp-route-CurrentFilter="@ViewData["CurrentFilter"]">Nombre</a>
                </th>
                <th>
                   <a asp-action="Index" asp-route-sortOrder="@ViewData["DescripcionSortParm"]"asp-route-CurrentFilter="@ViewData["CurrentFilter"]"> Descripcion</a>
                </th>
                <th>
                   Estado
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Estado)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.CategoriaID"><button class="btn btn-primary btn-sm">Editar</button></a> |
                <a asp-action="Details" asp-route-id="@item.CategoriaID"><button class="btn bg-info btn-sm">Detalles</button></a> |
                <a asp-action="Delete" asp-route-id="@item.CategoriaID"><button class="btn btn-danger btn-sm">Eliminar</button></a>
            </td>
        </tr>
}
    </tbody>
</table>
@{ 
    var prevDisable = !Model.HasPreviousPage ? "disable" : "";
    var nextDisable = !Model.HasNextPage ? "disable": "";
}



<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex -1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisable">
    Anterior
</a>

@for(int i =1; i<=Model.TotalPages;i++)
{
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-page="@i"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default">@i
    </a>
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex +1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisable">
    Siguiente
</a>
